from pvp:teams import Team, generate_team_object_tag, TEAM_COLOR_IDS
from tools:entity_link import get_children_entities, link_entities
from pvp:utils import default_block_display_data, default_game_object_text_display

NEXUS_ROOT_TAG = 'pvp.nexus.nexus_root'
NEXUS_ROOT_ENTITY = 'minecraft:marker'
NEXUS_BLOCK_ID = 'minecraft:spawner'

_NEXUS_COLOR_OVERLAY_TAG = 'pvp.nexus.nexus_color_overlay'

def update_nexus(team_: Team):
	as @e[type=NEXUS_ROOT_ENTITY, tag=NEXUS_ROOT_TAG, tag=generate_team_object_tag(team_)] at @s:
		unless block ~ ~ ~ NEXUS_BLOCK_ID:
			despawn_nexus('@s')
			log_chat(LogLevel.INFO, '@s', 'destroyed!')

		# Prevents accidental dev-rightclicks with spawn eggs
		data modify block ~ ~ ~ SpawnData.entity set value {}

def despawn_nexus(selector_: str):
	as selector(selector_) at @s:
		setblock ~ ~ ~ air

		as selector(get_children_entities('@s')):
			# log_chat(LogLevel.INFO, 'despawned nexus child', '@s')
			kill @s
		
		breakpoint()
		kill @s
		breakpoint()

def spawn_nexus(team_: Team):
	team_color_id = TEAM_COLOR_IDS[team_]
	temp_link_helper_tag = 'pvp.nexus.link_parent'

	summon NEXUS_ROOT_ENTITY ~ ~ ~ {
		Tags: [
			NEXUS_ROOT_TAG,
			generate_team_object_tag(team_),
			temp_link_helper_tag
		],
		CustomName: f'{{"color": "{team_color_id}", "text": "nexus"}}'
	}

	setblock ~ ~ ~ NEXUS_BLOCK_ID

	summon text_display ~ ~1.3 ~ default_game_object_text_display('Nexus', team_color_id):
		tag @s add generate_team_object_tag(team_)
		link_entities(parent=f'@n[tag={temp_link_helper_tag}]', child='@s')

	summon block_display ~ ~0.5 ~ default_block_display_data(f'{team_color_id}_stained_glass', scale=1.001):
		tag @s add generate_team_object_tag(team_)
		link_entities(parent=f'@n[tag={temp_link_helper_tag}]', child='@s')

	tag @n[tag=temp_link_helper_tag] remove temp_link_helper_tag


